# Graphbrain Configuration
# Copy this file to .env and fill in your values
# DO NOT commit .env to version control

# ============================================
# API Keys (for LLM and embedding providers)
# ============================================

# Google Cloud / Vertex AI
# Get from: https://console.cloud.google.com/apis/credentials
GOOGLE_API_KEY=your_google_api_key_here

# OpenAI
# Get from: https://platform.openai.com/api-keys
OPENAI_API_KEY=your_openai_api_key_here

# Anthropic (optional)
# Get from: https://console.anthropic.com/
ANTHROPIC_API_KEY=your_anthropic_api_key_here

# ============================================
# Backend Configuration
# ============================================

# Database backend: 'leveldb' or 'sqlite' (default: sqlite)
# SQLite: Works everywhere, good for < 1M edges
# LevelDB: Faster, requires compilation, good for > 1M edges
GRAPHBRAIN_BACKEND=leveldb

# ============================================
# Embeddings Configuration
# ============================================

# Embedding provider: 'sentence-transformers' (default, local, free),
#                     'vertex-ai' (Google Cloud, requires GOOGLE_API_KEY),
#                     'openai' (requires OPENAI_API_KEY)
GRAPHBRAIN_EMBEDDER=sentence-transformers

# Optional: Override default model for embedder
# sentence-transformers: 'all-MiniLM-L6-v2' (default), 'all-mpnet-base-v2', etc.
# vertex-ai: 'text-embedding-004' (default)
# openai: 'text-embedding-3-small' (default), 'text-embedding-3-large'
# GRAPHBRAIN_EMBEDDER_MODEL=all-MiniLM-L6-v2

# Enable embedding caching (recommended for performance)
GRAPHBRAIN_EMBEDDING_CACHE=true

# Cache directory for embeddings
GRAPHBRAIN_EMBEDDING_CACHE_DIR=~/.cache/graphbrain/embeddings

# ============================================
# Vector Store Configuration
# ============================================

# ChromaDB persistence directory (optional)
# If not set, uses in-memory storage
# CHROMA_PERSIST_DIR=./chroma_data

# ============================================
# Google Cloud / BigQuery (for future features)
# ============================================

# GCP Project ID (for BigQuery Vector Search, etc.)
# GCP_PROJECT_ID=your-gcp-project-id

# BigQuery dataset and table for vector storage
# BQ_DATASET=your_dataset
# BQ_TABLE=your_vector_table

# ============================================
# Feature Flags
# ============================================

# Enable LLM-based parsing (experimental)
GRAPHBRAIN_ENABLE_LLM_PARSING=false

# ============================================
# Logging
# ============================================

# Log level: DEBUG, INFO, WARNING, ERROR
GRAPHBRAIN_LOG_LEVEL=INFO

# Log format: 'text' or 'json' (json recommended for production)
GRAPHBRAIN_LOG_FORMAT=text

# ============================================
# Security & Performance
# ============================================

# Query timeout in seconds (prevents long-running queries)
GRAPHBRAIN_QUERY_TIMEOUT=30

# Maximum pattern depth (prevents overly complex queries)
GRAPHBRAIN_MAX_PATTERN_DEPTH=10

# ============================================
# Notes
# ============================================

# 1. Minimum required for basic usage: None!
#    Graphbrain works out-of-the-box with default settings.
#
# 2. For LLM integration (RAG, embeddings):
#    - Local (free): Keep defaults (sentence-transformers)
#    - Google Cloud: Set GOOGLE_API_KEY + GRAPHBRAIN_EMBEDDER=vertex-ai
#    - OpenAI: Set OPENAI_API_KEY + GRAPHBRAIN_EMBEDDER=openai
#
# 3. For production:
#    - Set GRAPHBRAIN_LOG_FORMAT=json
#    - Consider GRAPHBRAIN_BACKEND=leveldb for large graphs
#    - Set CHROMA_PERSIST_DIR for persistent vector storage
#
# 4. Security:
#    - NEVER commit this file with real API keys
#    - Add .env to .gitignore (already done)
#    - Use secrets management in production (e.g., GCP Secret Manager)
